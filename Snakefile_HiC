SAMPLES_HiC     = ["Povata-HiC_combined"]
READS           = ["R1", "R2"]
ENVS            = "HiC.yaml"
LOGS            = "logs"
RAW             = "raw"
QC              = "qc"
MULTIQC         = "multiqc"
TRIMMED         = "trimmed"
QC_TRIMMED      = "qc_trimmed"
MULTIQC_TRIMMED = "multiqc_trimmed"
ADAPTERS        = "all_adapters.fa"
REFERENCES      = "Plantago.fasta.gz"

################
# Pseudo-rules #
################
rule all:
        input:
                expand(QC+"/{SAMPLE}_{READ}_fastqc.html", SAMPLE=SAMPLES_HiC, READ=READS),
                MULTIQC+"/multiqc_report.html",
                expand(TRIMMED+"/{SAMPLE}_{READ}.fastq.gz", SAMPLE=SAMPLES_HiC, READ=READS),
                expand(QC_TRIMMED+"/{SAMPLE}_{READ}_fastqc.html", SAMPLE=SAMPLES_HiC, READ=READS),
                MULTIQC_TRIMMED+"/multiqc_report.html",


################
# Rules Proper #
################
rule fastqc_raw:
        input:
                expand(RAW+"/{SAMPLE}_{READ}.fastq.gz", SAMPLE=SAMPLES_HiC, READ=READS)
        output:
                zip = QC+"/{SAMPLE}_{READ}_fastqc.zip",
                html = QC+"/{SAMPLE}_{READ}_fastqc.html"
        conda:
                ENVS
        log:
                LOGS+"/fastqc_raw/{SAMPLE}_{READ}"
        params:
                QC
        shell:
                """
                fastqc -o {params} --threads 2 {input}
                2> {log}
                """

rule multiqc_raw:
        input:
                expand(QC+"/{SAMPLE}_{READ}_fastqc.html", SAMPLE=SAMPLES_HiC, READ=READS)
        output:
                MULTIQC+"/multiqc_report.html"
        conda:
                ENVS
        log:
                LOGS+"/multiqc_raw/multiqc_report"
        params:
                indir = QC ,
                outdir = MULTIQC
        shell:
                """
                multiqc {params.indir} -o {params.outdir}
                2> {log}
                """

rule trimmomatic:
        input:
                r1 = RAW+"/{SAMPLES}_R1.fastq.gz",
                r2 = RAW+"/{SAMPLES}_R2.fastq.gz",
                adapters = ADAPTERS
        output:
                r1 = TRIMMED+"/{SAMPLES}_R1.fastq.gz",
                r1_unpaired = TRIMMED+"/{SAMPLES}_R1.unpaired.fastq.gz",
                r2 = TRIMMED+"/{SAMPLES}_R2.fastq.gz",
                r2_unpaired = TRIMMED+"/{SAMPLES}_R2.unpaired.fastq.gz"
        conda:
                ENVS
        log:
                r1 = LOGS+"/trimmomatic/{SAMPLES}_R1",
                r2 = LOGS+"/trimmomatic/{SAMPLES}_R1.unpaired",
                r1_unpaired = LOGS+"/trimmomatic/{SAMPLES}_R2",
                r2_unpaired = LOGS+"/trimmomatic/{SAMPLES}_R2.unpaired"
        shell:
                """
                trimmomatic PE -threads 2 {input.r1} {input.r2} {output.r1} \
                {output.r1_unpaired} {output.r2} {output.r2_unpaired} \
                ILLUMINACLIP:{input.adapters}:2:30:10:3:true LEADING:2 TRAILING:2 SLIDINGWINDOW:4:15 MINLEN:36
                """

rule fastqc_trimmed:
        input:
                expand(TRIMMED+"/{SAMPLE}_{READ}.fastq.gz", SAMPLE=SAMPLES_HiC, READ=READS)
        output:
                zip = QC_TRIMMED+"/{SAMPLE}_{READ}_fastqc.zip",
                html = QC_TRIMMED+"/{SAMPLE}_{READ}_fastqc.html"
        conda:
                ENVS
        log:
                LOGS+"/fastqc_TRIMMED/{SAMPLE}_{READ}"
        params:
                QC_TRIMMED
        shell:
                """
                fastqc -o {params} --threads 2 {input}
                2> {log}
                """

rule multiqc_trimmed:
        input:
                expand(QC_TRIMMED+"/{SAMPLE}_{READ}_fastqc.html", SAMPLE=SAMPLES_HiC, READ=READS)
        output:
                MULTIQC_TRIMMED+"/multiqc_report.html"
        conda:
                ENVS
        log:   
                LOGS+"/multiqc_trimmed/multiqc_report"
        params:
                indir = QC_TRIMMED ,
                outdir = MULTIQC_TRIMMED
        shell:
                """
                multiqc {params.indir} -o {params.outdir}
                2> {log}
                """

